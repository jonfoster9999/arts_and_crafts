<% if current_user.id == @project.user_id %>
	<%= link_to "Edit", edit_user_project_path(@user, @project) %>
	<%= link_to "Delete", user_project_path(@user, @project), :method => :delete %>
<% end %>
<br>
<br>
<div class="comment_form">
	Write a review:
	<%= render :partial => "comment_form", locals: {project: @project, review: @review} %>
</div>
<h3>Reviews: </h3>
<ul class="project_comments">
		<%= render :partial => "review", :collection => @project.reviews %>
<script>

$(function(){

	//variables:

	var projectUrl = window.location.href + ".json";
	var form = $('form')

	//generic get function:

 	function getProjectInfo (callback) {
 		$.get(projectUrl)
 			.success(callback)
 		}

 	//callbacks:

 	function buildHtmlCallback(response) {
 		var project = new ProjectForShowPage(response)
 		var projectHTML = project.buildProjectHtml();
 		$('.comment_form').before(projectHTML)
 		
 	}
	
	function reviewCallback(response) {	
		var myProject = new ProjectForShowPage(response)
		$('#rating').text(myProject.averageRating())
	}

	//constructor:

	function ProjectForShowPage(productHash) {
		for (key in productHash) {
			this[key] = productHash[key]
		}
	}

	//constructor prototype: 

	ProjectForShowPage.prototype= {
		averageRating : function(){
			var ratingTotal = 0;
			var numberOfReviews = this.reviews.length;
			for(var i = 0, n = this.reviews.length; i < n; i++) {
				ratingTotal += this.reviews[i].rating;
			}
			var rating = (ratingTotal/numberOfReviews).toFixed(1)
			return isNaN(rating) ? (0).toFixed(1) : rating
		},
		totalCost: function(){
			var totalCost = 0
			this.supplies.forEach(function(value){
				totalCost += value.price
			})
			return totalCost
		},
		buildProjectHtml: function(){
			var html = "<div>"
			html += "<h2>" + this.title  +" (<span id='rating'>" + this.averageRating() + "</span>\/5.0 average rating)</h2>"
			html += "<h5>by: <a href='/users/" + this.user.id + "'>" + this.user.name + "</a></h5>"
			html += "<div class='description'>Description:<br><br>"
			html += this.description + "<br>"
			html += "</div><br>"
			html += "<div class='supplies'>Supplies: <br>"
			html += "----------------------<br>"
			for(var i = 0, n = this.supplies.length; i<n; i++) {
				var supply = this.supplies[i]
				html += "<a href='/supplies/" + supply.id + "'>" + supply.title + "</a>"
				html += " - $" + supply.price + "<br>"
			}
			html += "----------------------<br>"
			html += "Total Cost: $" + this.totalCost();
			html += "</div>"
			return html
		}
	}

	//review submission:

	form.submit(function(e){
		e.preventDefault();
 		$.post(this.action, form.serialize())
 			.success(function(data){

 				//handles updating the average review:
 				getProjectInfo(reviewCallback);

 				//Clear form fields:
 				form.each(function(){
 					this.reset();
 				})

 				//reactivate form after submission:
 				$('#submit').attr("disabled", false)

 				//append data to reviews list:
 				$('.project_comments').append(data)
 			})
	})

	//populate show page:

	getProjectInfo(buildHtmlCallback)
})

</script>